<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\app_gpio_test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\app_gpio_test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri Nov 10 15:20:39 2023
<BR><P>
<H3>Maximum Stack Usage =       1320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
system_platform_init &rArr; soc_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[36]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">BusFault_Handler</a><BR>
 <LI><a href="#[35]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">MemManage_Handler</a><BR>
 <LI><a href="#[33]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">NMI_Handler</a><BR>
 <LI><a href="#[39]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">DebugMon_Handler</a><BR>
 <LI><a href="#[3a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">PendSV_Handler</a><BR>
 <LI><a href="#[3b]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">SysTick_Handler</a><BR>
 <LI><a href="#[37]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[83]">AON_EXT_IRQHandler</a> from app_io.o(RAM_CODE) referenced from app_io.o(i.app_io_init)
 <LI><a href="#[99]">BLESLP_IRQHandler</a> from rom_symbol.txt(ABSOLUTE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[36]">BusFault_Handler</a> from gr_interrupt.o(i.BusFault_Handler) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[36]">BusFault_Handler</a> from gr_interrupt.o(i.BusFault_Handler) referenced from startup.o(RESET)
 <LI><a href="#[39]">DebugMon_Handler</a> from startup.o(.text) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[39]">DebugMon_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[81]">EXT0_IRQHandler</a> from app_io.o(RAM_CODE) referenced from app_io.o(i.app_io_init)
 <LI><a href="#[82]">EXT1_IRQHandler</a> from app_io.o(RAM_CODE) referenced from app_io.o(i.app_io_init)
 <LI><a href="#[34]">HardFault_Handler</a> from gr_interrupt.o(RAM_CODE) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[34]">HardFault_Handler</a> from gr_interrupt.o(RAM_CODE) referenced from startup.o(RESET)
 <LI><a href="#[35]">MemManage_Handler</a> from gr_interrupt.o(i.MemManage_Handler) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[35]">MemManage_Handler</a> from gr_interrupt.o(i.MemManage_Handler) referenced from startup.o(RESET)
 <LI><a href="#[33]">NMI_Handler</a> from startup.o(.text) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[33]">NMI_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[3a]">PendSV_Handler</a> from startup.o(.text) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[3a]">PendSV_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[32]">Reset_Handler</a> from startup.o(.text) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[32]">Reset_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[a6]">SLPTIMER_IRQHandler</a> from app_timer.o(i.SLPTIMER_IRQHandler) referenced from app_timer.o(i.sleep_timer_handler_register)
 <LI><a href="#[38]">SVC_Handler</a> from gr_soc.o(RAM_CODE) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[38]">SVC_Handler</a> from gr_soc.o(RAM_CODE) referenced from startup.o(RESET)
 <LI><a href="#[3b]">SysTick_Handler</a> from startup.o(.text) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[3b]">SysTick_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[7a]">SystemInit</a> from gr_system.o(i.SystemInit) referenced from startup.o(.text)
 <LI><a href="#[87]">UART0_IRQHandler</a> from app_uart.o(i.UART0_IRQHandler) referenced from app_uart.o(i.app_uart_init)
 <LI><a href="#[88]">UART1_IRQHandler</a> from app_uart.o(i.UART1_IRQHandler) referenced from app_uart.o(i.app_uart_init)
 <LI><a href="#[37]">UsageFault_Handler</a> from gr_interrupt.o(i.UsageFault_Handler) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[37]">UsageFault_Handler</a> from gr_interrupt.o(i.UsageFault_Handler) referenced from startup.o(RESET)
 <LI><a href="#[80]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[7e]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[7c]">_snputc</a> from _snputc.o(.text) referenced 2 times from vsnprintf.o(.text)
 <LI><a href="#[7d]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[3c]">app_assert_err_cb</a> from app_assert.o(i.app_assert_err_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[3d]">app_assert_param_cb</a> from app_assert.o(i.app_assert_param_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[3e]">app_assert_warn_cb</a> from app_assert.o(i.app_assert_warn_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[84]">app_gpiote_event_handler</a> from app_key.o(i.app_gpiote_event_handler) referenced from app_key.o(i.app_key_init)
 <LI><a href="#[91]">app_io_event_handler</a> from main.o(i.app_io_event_handler) referenced 2 times from main.o(.constdata)
 <LI><a href="#[91]">app_io_event_handler</a> from main.o(i.app_io_event_handler) referenced from main.o(i.gpio_interrupt_demo)
 <LI><a href="#[85]">app_key_core_evt_handler</a> from app_key.o(i.app_key_core_evt_handler) referenced from app_key.o(i.app_key_init)
 <LI><a href="#[89]">app_key_evt_handler</a> from board_sk.o(i.app_key_evt_handler) referenced from board_sk.o(i.bsp_key_init)
 <LI><a href="#[86]">app_key_timeout_handler</a> from app_key.o(i.app_key_timeout_handler) referenced from app_key.o(i.app_key_timer_start)
 <LI><a href="#[8c]">app_uart_evt_handler</a> from board_sk.o(i.app_uart_evt_handler) referenced from board_sk.o(i.bsp_uart_init)
 <LI><a href="#[ac]">ble_bm_set_sec_info_patch</a> from ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[75]">ble_init_cplt_callback</a> from ble_event_patch.o(i.ble_init_cplt_callback) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[a4]">ble_irq_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[94]">ble_sdk_common_timeout_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
 <LI><a href="#[22]">ble_sdk_gatt_mtu_changed_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[20]">ble_sdk_gattc_event_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[21]">ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[a5]">ble_sdk_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[a3]">ble_sleep_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[a2]">ble_sleep_without_stack_init</a> from rwip_sleep_common.o(i.ble_sleep_without_stack_init) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[8a]">bsp_uart_flush</a> from board_sk.o(i.bsp_uart_flush) referenced from board_sk.o(i.bsp_log_init)
 <LI><a href="#[8b]">bsp_uart_send</a> from board_sk.o(i.bsp_uart_send) referenced from board_sk.o(i.bsp_log_init)
 <LI><a href="#[9d]">cpll_calibration</a> from platform_sdk.o(i.cpll_calibration) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[98]">fpb_patch_enable</a> from fpb_patch_init.o(i.fpb_patch_enable) referenced from gr_soc.o(i.platform_init)
 <LI><a href="#[7f]">fputc</a> from app_log.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[5]">gap_activity_stopped_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[52]">gap_adv_data_update_cb</a> from ble_event_patch.o(i.gap_adv_data_update_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[55]">gap_adv_report_ind_cb</a> from ble_event_patch.o(i.gap_adv_report_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[4f]">gap_adv_start_cb</a> from ble_event_patch.o(i.gap_adv_start_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[50]">gap_adv_stop_cb</a> from ble_event_patch.o(i.gap_adv_stop_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[5c]">gap_auto_connection_timeout_cb</a> from ble_event_patch.o(i.gap_auto_connection_timeout_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1e]">gap_cmp_evt_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[5b]">gap_connect_cancel_cb</a> from ble_event_patch.o(i.gap_connect_cancel_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[59]">gap_connect_cb</a> from ble_event_patch.o(i.gap_connect_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[60]">gap_connection_info_get_cb</a> from ble_event_patch.o(i.gap_connection_info_get_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1b]">gap_connection_req_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[5e]">gap_connection_update_cb</a> from ble_event_patch.o(i.gap_connection_update_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[5f]">gap_connection_update_req_cb</a> from ble_event_patch.o(i.gap_connection_update_req_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6]">gap_dev_bdaddr_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[4e]">gap_dev_info_get_cb</a> from ble_event_patch.o(i.gap_dev_info_get_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[5a]">gap_disconnect_cb</a> from ble_event_patch.o(i.gap_disconnect_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1c]">gap_disconnect_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[62]">gap_le_pkt_size_info_cb</a> from ble_event_patch.o(i.gap_le_pkt_size_info_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[4b]">gap_param_set_cb</a> from ble_event_patch.o(i.gap_param_set_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[61]">gap_peer_info_get_cb</a> from ble_event_patch.o(i.gap_peer_info_get_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[5d]">gap_peer_name_ind_cb</a> from ble_event_patch.o(i.gap_peer_name_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[4d]">gap_phy_update_cb</a> from ble_event_patch.o(i.gap_phy_update_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[4c]">gap_psm_manager_cb</a> from ble_event_patch.o(i.gap_psm_manager_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[63]">gap_rslv_addr_read_cb</a> from ble_event_patch.o(i.gap_rslv_addr_read_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[51]">gap_scan_req_ind_cb</a> from ble_event_patch.o(i.gap_scan_req_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[53]">gap_scan_start_cb</a> from ble_event_patch.o(i.gap_scan_start_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[54]">gap_scan_stop_cb</a> from ble_event_patch.o(i.gap_scan_stop_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[57]">gap_stop_sync_cb</a> from ble_event_patch.o(i.gap_stop_sync_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[56]">gap_sync_establish_cb</a> from ble_event_patch.o(i.gap_sync_establish_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[58]">gap_sync_lost_cb</a> from ble_event_patch.o(i.gap_sync_lost_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1a]">gapc_hci_handler_patch</a> from gapc_hci_patch.o(i.gapc_hci_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[23]">gapm_activity_create_cmd_handler_patch</a> from gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[4]">gapm_cmp_evt_handler_patch</a> from ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[24]">gapm_hci_handler_patch</a> from gapm_task_patch.o(i.gapm_hci_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[90]">gapm_init_delete</a> from rom_symbol.txt(ABSOLUTE) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[8e]">gapm_init_start_patch</a> from gapm_init_patch.o(i.gapm_init_start_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[8f]">gapm_init_stop_patch</a> from gapm_init_patch.o(i.gapm_init_stop_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[25]">gapm_set_dev_config_cmd_handler_patch</a> from gapm_cfg_patch.o(i.gapm_set_dev_config_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[64]">gatt_mtu_exchange_cb</a> from ble_event_patch.o(i.gatt_mtu_exchange_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[65]">gatt_prf_register_cb</a> from ble_event_patch.o(i.gatt_prf_register_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[69]">gattc_char_desc_disc_cb</a> from ble_event_patch.o(i.gattc_char_desc_disc_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[68]">gattc_char_disc_cb</a> from ble_event_patch.o(i.gattc_char_disc_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[67]">gattc_inc_srvc_disc_cb</a> from ble_event_patch.o(i.gattc_inc_srvc_disc_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6c]">gattc_ntf_ind_cb</a> from ble_event_patch.o(i.gattc_ntf_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6a]">gattc_read_cb</a> from ble_event_patch.o(i.gattc_read_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6d]">gattc_srvc_browse_cb</a> from ble_event_patch.o(i.gattc_srvc_browse_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[66]">gattc_srvc_disc_cb</a> from ble_event_patch.o(i.gattc_srvc_disc_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6b]">gattc_write_cb</a> from ble_event_patch.o(i.gattc_write_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[8d]">get_info</a> from dfu_cmd_handler_patch.o(i.get_info) referenced from dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
 <LI><a href="#[41]">hal_aon_gpio_callback</a> from app_io.o(i.hal_aon_gpio_callback) referenced 2 times from gr55xx_hal_aon_gpio_1.o(.data)
 <LI><a href="#[ab]">hal_exflash_erase</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[aa]">hal_exflash_write</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[42]">hal_gpio_exti_callback</a> from app_io.o(i.hal_gpio_exti_callback) referenced 2 times from gr55xx_hal_gpio_1.o(.data)
 <LI><a href="#[40]">hal_msp_deinit</a> from gr55xx_hal_1.o(i.hal_msp_deinit) referenced 2 times from gr55xx_hal_1.o(.data)
 <LI><a href="#[3f]">hal_msp_init</a> from gr55xx_hal_1.o(i.hal_msp_init) referenced 2 times from gr55xx_hal_1.o(.data)
 <LI><a href="#[92]">hal_pwr_sleep_timer_elapsed_callback</a> from app_timer.o(i.hal_pwr_sleep_timer_elapsed_callback) referenced from gr55xx_hal_pwr_1.o(i.hal_pwr_config_timer_wakeup)
 <LI><a href="#[48]">hal_uart_abort_cplt_callback</a> from app_uart.o(i.hal_uart_abort_cplt_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[4a]">hal_uart_abort_rx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[49]">hal_uart_abort_tx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[47]">hal_uart_error_callback</a> from app_uart.o(i.hal_uart_error_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[44]">hal_uart_msp_deinit</a> from gr55xx_hal_uart_1.o(i.hal_uart_msp_deinit) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[43]">hal_uart_msp_init</a> from gr55xx_hal_uart_1.o(i.hal_uart_msp_init) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[46]">hal_uart_rx_cplt_callback</a> from app_uart.o(i.hal_uart_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[45]">hal_uart_tx_cplt_callback</a> from app_uart.o(i.hal_uart_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart_1.o(.data)
 <LI><a href="#[2b]">hci_le_add_dev_to_rslv_list_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_add_dev_to_rslv_list_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[26]">hci_le_add_dev_to_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[2a]">hci_le_clear_rslv_list_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_clear_rslv_list_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[28]">hci_le_clear_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[30]">hci_le_cmd_cmp_evt_init_handler_patch</a> from gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[31]">hci_le_cmd_cmp_evt_scan_handler_patch</a> from gapm_scan_patch.o(i.hci_le_cmd_cmp_evt_scan_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[96]">hci_le_con_upd_cmd_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[97]">hci_le_con_upd_cmd_handler_patch</a> from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[2d]">hci_le_ext_create_con_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[27]">hci_le_rmv_dev_from_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[29]">hci_le_set_addr_resol_en_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_set_addr_resol_en_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[2f]">hci_le_set_ext_scan_en_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[2e]">hci_le_set_ext_scan_param_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[2c]">hci_le_set_priv_mode_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_set_priv_mode_cmd_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[19]">hci_nb_cmp_pkts_evt_handler_patch</a> from l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[a9]">hci_send_2_controller_patch</a> from hci_patch.o(i.hci_send_2_controller_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[9]">host_to_sdk_msg_handler_patch</a> from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[ad]">ke_task_schedule_patch</a> from ke_task_patch.o(i.ke_task_schedule_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[70]">l2cap_lecb_add_credits_ind_cb</a> from ble_event_patch.o(i.l2cap_lecb_add_credits_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6f]">l2cap_lecb_conn_cb</a> from ble_event_patch.o(i.l2cap_lecb_conn_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[6e]">l2cap_lecb_conn_req_cb</a> from ble_event_patch.o(i.l2cap_lecb_conn_req_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[74]">l2cap_lecb_credit_add_cmp_cb</a> from ble_event_patch.o(i.l2cap_lecb_credit_add_cmp_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[71]">l2cap_lecb_disconn_cb</a> from ble_event_patch.o(i.l2cap_lecb_disconn_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[72]">l2cap_lecb_sdu_recv_cb</a> from ble_event_patch.o(i.l2cap_lecb_sdu_recv_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[73]">l2cap_lecb_sdu_send_cb</a> from ble_event_patch.o(i.l2cap_lecb_sdu_send_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[a]">l2cc_pdu_recv_ind_handler_patch</a> from gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[95]">l2cm_l2cap_tx_handler_patch</a> from l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch) referenced from l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
 <LI><a href="#[14]">llc_auth_payl_nearly_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[15]">llc_auth_payl_real_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[8]">llc_hci_command_handler_patch</a> from llc_hci_patch.o(i.llc_hci_command_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[93]">llc_loc_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
 <LI><a href="#[b]">llc_loc_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[16]">llc_op_dl_upd_ind_handler_patch</a> from llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[c]">llc_rem_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[f]">lld_acl_rx_ind_handler_patch</a> from llc_task_patch.o(i.lld_acl_rx_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[11]">lld_ch_map_upd_cfm_handler_patch</a> from llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[13]">lld_con_offset_upd_ind_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[10]">lld_con_param_upd_cfm_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[17]">lld_init_end_ind_handler_patch</a> from llm_init_patch.o(i.lld_init_end_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[d]">lld_llcp_rx_ind_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[e]">lld_llcp_tx_cfm_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[12]">lld_phy_upd_cfm_handler_patch</a> from llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[18]">llm_ch_map_to_handler_patch</a> from llm_init_patch.o(i.llm_ch_map_to_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[7]">llm_hci_command_handler_patch</a> from llm_hci_patch.o(i.llm_hci_command_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[7b]">main_init</a> from gr_platform.o(i.main_init) referenced from startup.o(.text)
 <LI><a href="#[a0]">pwr_enter_sleep_check</a> from app_pwr_mgmt.o(i.pwr_enter_sleep_check) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[9e]">pwr_mgmt_shutdown_patch</a> from sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE) referenced from sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
 <LI><a href="#[9f]">pwr_wake_up_ind</a> from app_pwr_mgmt.o(RAM_CODE) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[a1]">rom_callback_patch</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rom_callback_replace)
 <LI><a href="#[77]">sec_rcv_enc_ind_cb</a> from ble_event_patch.o(i.sec_rcv_enc_ind_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[76]">sec_rcv_enc_req_cb</a> from ble_event_patch.o(i.sec_rcv_enc_req_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1f]">sec_rcv_encrypt_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[79]">sec_rcv_key_missing_cb</a> from ble_event_patch.o(i.sec_rcv_key_missing_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[78]">sec_rcv_keypress_notify_cb</a> from ble_event_patch.o(i.sec_rcv_keypress_notify_cb) referenced 2 times from ble_event_patch.o(.data)
 <LI><a href="#[1d]">sec_rcv_sec_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch) referenced 2 times from gr_soc.o(.data)
 <LI><a href="#[9b]">sys_context_restore_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[9a]">sys_context_save_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[ae]">system_platform_init</a> from gr_platform.o(i.system_platform_init) referenced from gr_platform.o(.init_array)
 <LI><a href="#[a7]">uart_prepare_for_sleep</a> from app_uart.o(i.uart_prepare_for_sleep) referenced from app_uart.o(.constdata)
 <LI><a href="#[a8]">uart_wake_up_ind</a> from app_uart.o(RAM_CODE) referenced from app_uart.o(.constdata)
 <LI><a href="#[9c]">ultra_wfi</a> from rom_symbol.txt(ABSOLUTE) referenced from platform_sdk.o(i.platform_sdk_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[116]"></a>assert_err</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init (via Veneer)
</UL>

<P><STRONG><a name="[265]"></a>assert_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
</UL>

<P><STRONG><a name="[27b]"></a>assert_warn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[288]"></a>attc_l2cc_pdu_recv_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[208]"></a>attm_att_set_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[207]"></a>attm_att_update_perm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[205]"></a>attmdb_destroy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[182]"></a>attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[184]"></a>atts_hdl_value_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[187]"></a>atts_process_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[27a]"></a>ble_util_buf_acl_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[2a1]"></a>ble_util_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch (via Veneer)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[262]"></a>co_bdaddr_compare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[284]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
</UL>

<P><STRONG><a name="[186]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
</UL>

<P><STRONG><a name="[2af]"></a>co_nb_good_le_channels</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch (via Veneer)
</UL>

<P><STRONG><a name="[122]"></a>dbg_log_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch (via Veneer)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch (via Veneer)
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put (via Veneer)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch (via Veneer)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch (via Veneer)
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds (via Veneer)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item (via Veneer)
</UL>

<P><STRONG><a name="[335]"></a>exflash_check_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[352]"></a>exflash_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[34c]"></a>exflash_enable_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
</UL>

<P><STRONG><a name="[35e]"></a>exflash_erase_chip</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[35f]"></a>exflash_erase_sector</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[35d]"></a>exflash_page_program</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[363]"></a>exflash_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[362]"></a>exflash_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[34a]"></a>exflash_wait_busy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[333]"></a>exflash_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[34f]"></a>exflash_write_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
</UL>

<P><STRONG><a name="[36c]"></a>force_dpad_le_high</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
</UL>

<P><STRONG><a name="[268]"></a>gapc_get_conidx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[24a]"></a>gapc_get_dest_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[269]"></a>gapc_get_operation</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[24b]"></a>gapc_send_disconect_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[24c]"></a>gapc_send_error_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1f9]"></a>gapm_actv_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>

<P><STRONG><a name="[1e8]"></a>gapm_actv_check_create_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[1fb]"></a>gapm_actv_created</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>

<P><STRONG><a name="[1e9]"></a>gapm_actv_get_free_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[257]"></a>gapm_actv_retrieve_cmd_cmp_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler_patch
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[281]"></a>gapm_actv_started</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>

<P><STRONG><a name="[1ea]"></a>gapm_adv_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[24d]"></a>gapm_con_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[204]"></a>gapm_dle_val_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
</UL>

<P><STRONG><a name="[1f8]"></a>gapm_get_address_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>

<P><STRONG><a name="[1f0]"></a>gapm_get_att_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1fa]"></a>gapm_get_requester</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>

<P><STRONG><a name="[206]"></a>gapm_init_attr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
</UL>

<P><STRONG><a name="[1fc]"></a>gapm_init_check_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
</UL>

<P><STRONG><a name="[90]"></a>gapm_init_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[200]"></a>gapm_init_send_hci_le_create_con_cancel_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch
</UL>

<P><STRONG><a name="[1fe]"></a>gapm_init_send_hci_le_ext_create_con_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
</UL>

<P><STRONG><a name="[280]"></a>gapm_init_stopped</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>

<P><STRONG><a name="[1f7]"></a>gapm_is_addr_type_valid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>

<P><STRONG><a name="[20b]"></a>gapm_le_psm_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
</UL>

<P><STRONG><a name="[1ec]"></a>gapm_per_sync_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[1e7]"></a>gapm_process_op</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[1eb]"></a>gapm_scan_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[209]"></a>gattm_init_attr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
</UL>

<P><STRONG><a name="[22a]"></a>hal_aon_gpio_br_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>

<P><STRONG><a name="[140]"></a>hal_aon_gpio_read_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
</UL>

<P><STRONG><a name="[225]"></a>hal_aon_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
</UL>

<P><STRONG><a name="[306]"></a>hal_efuse_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[22f]"></a>hal_exflash_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>

<P><STRONG><a name="[22c]"></a>hal_exflash_read_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>

<P><STRONG><a name="[331]"></a>hal_exflash_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
</UL>

<P><STRONG><a name="[231]"></a>hal_gpio_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>

<P><STRONG><a name="[328]"></a>hal_gpio_exti_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_IRQHandler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT0_IRQHandler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_IRQHandler
</UL>

<P><STRONG><a name="[233]"></a>hal_gpio_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[13f]"></a>hal_gpio_read_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
</UL>

<P><STRONG><a name="[230]"></a>hal_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>

<P><STRONG><a name="[143]"></a>hal_gpio_toggle_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_toggle_pin
</UL>

<P><STRONG><a name="[147]"></a>hal_gpio_write_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[236]"></a>hal_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[238]"></a>hal_msio_read_pin_sym</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_read_pin
</UL>

<P><STRONG><a name="[239]"></a>hal_msio_toggle_pin_sym</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_toggle_pin
</UL>

<P><STRONG><a name="[23a]"></a>hal_msio_write_pin_sym</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin
</UL>

<P><STRONG><a name="[139]"></a>hal_nvic_clear_pending_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[13a]"></a>hal_nvic_enable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[23d]"></a>hal_pwr_config_timer_wakeup_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>

<P><STRONG><a name="[37f]"></a>hal_pwr_enter_chip_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[23c]"></a>hal_pwr_register_timer_elaspsed_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>

<P><STRONG><a name="[119]"></a>hal_pwr_sleep_timer_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLPTIMER_IRQHandler
</UL>

<P><STRONG><a name="[235]"></a>hal_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[171]"></a>hal_uart_abort_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[248]"></a>hal_uart_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>

<P><STRONG><a name="[249]"></a>hal_uart_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[11c]"></a>hal_uart_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[247]"></a>hal_uart_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>

<P><STRONG><a name="[32a]"></a>hal_uart_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[312]"></a>hal_uart_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep
</UL>

<P><STRONG><a name="[172]"></a>hal_uart_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[16e]"></a>hal_uart_transmit_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_dma_start_transmit_async
</UL>

<P><STRONG><a name="[17a]"></a>hal_uart_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[347]"></a>hal_xqspi_command_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>

<P><STRONG><a name="[36e]"></a>hal_xqspi_msp_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[36f]"></a>hal_xqspi_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[349]"></a>hal_xqspi_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[259]"></a>init_hci_le_cmd_cmp_evt_started_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[25a]"></a>init_hci_le_cmd_cmp_evt_stopping_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[25c]"></a>scan_hci_le_cmd_cmp_evt_stopping_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler_patch
</UL>

<P><STRONG><a name="[96]"></a>hci_le_con_upd_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[279]"></a>hci_look_for_cmd_desc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
</UL>

<P><STRONG><a name="[203]"></a>hci_send_2_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>

<P><STRONG><a name="[337]"></a>jump_app</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[28c]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
</UL>

<P><STRONG><a name="[287]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[278]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[285]"></a>ke_is_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[202]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>

<P><STRONG><a name="[266]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
</UL>

<P><STRONG><a name="[25f]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[2b3]"></a>ke_msg_send_basic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[185]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[286]"></a>ke_task_handler_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[1ff]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_addr_resol_en_cmd_handler_patch
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>

<P><STRONG><a name="[1fd]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_addr_resol_en_cmd_handler_patch
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
</UL>

<P><STRONG><a name="[28a]"></a>l2cc_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[289]"></a>l2cc_pdu_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[276]"></a>l2cm_get_nb_buffer_available</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
</UL>

<P><STRONG><a name="[293]"></a>llc_auth_payl_nearly_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler_patch
</UL>

<P><STRONG><a name="[294]"></a>llc_auth_payl_real_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler_patch
</UL>

<P><STRONG><a name="[260]"></a>llc_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
</UL>

<P><STRONG><a name="[25d]"></a>llc_con_upd_param_in_range</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
</UL>

<P><STRONG><a name="[298]"></a>llc_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>

<P><STRONG><a name="[29d]"></a>llc_hci_enc_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[29e]"></a>llc_le_ping_restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[29c]"></a>llc_llcp_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[93]"></a>llc_loc_con_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
</UL>
<P><STRONG><a name="[299]"></a>llc_op_dl_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler_patch
</UL>

<P><STRONG><a name="[29a]"></a>llc_proc_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[25e]"></a>llc_proc_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
</UL>

<P><STRONG><a name="[29f]"></a>llc_proc_timer_pause_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[2a0]"></a>llc_proc_unreg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[2a2]"></a>lld_acl_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[261]"></a>lld_addr_is_in_ral_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[2ae]"></a>lld_ch_assess_data_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[2b0]"></a>lld_ch_map_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[2a3]"></a>lld_ch_map_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[29b]"></a>lld_con_data_flow_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[2b1]"></a>lld_con_rx_qual_asses_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[2a4]"></a>lld_con_offset_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
</UL>

<P><STRONG><a name="[2a5]"></a>lld_con_param_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[2a7]"></a>lld_init_end_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_end_ind_handler_patch
</UL>

<P><STRONG><a name="[2a9]"></a>lld_llcp_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[2aa]"></a>lld_llcp_tx_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
</UL>

<P><STRONG><a name="[2b4]"></a>lld_per_adv_ch_map_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[2ab]"></a>lld_phy_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[2ad]"></a>lld_read_clock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[24f]"></a>lld_res_list_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_rslv_list_cmd_handler_patch
</UL>

<P><STRONG><a name="[255]"></a>lld_res_list_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_rslv_list_cmd_handler_patch
</UL>

<P><STRONG><a name="[271]"></a>lld_res_list_is_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[275]"></a>lld_res_list_priv_mode_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_priv_mode_cmd_handler_patch
</UL>

<P><STRONG><a name="[26e]"></a>lld_rpa_renew</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_addr_resol_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[270]"></a>lld_scan_params_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[26f]"></a>lld_scan_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[254]"></a>lld_white_list_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[256]"></a>lld_white_list_rem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[263]"></a>llm_activity_free_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[250]"></a>llm_cmd_cmp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_priv_mode_cmd_handler_patch
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_addr_resol_en_cmd_handler_patch
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_rslv_list_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_rslv_list_cmd_handler_patch
</UL>

<P><STRONG><a name="[267]"></a>llm_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[252]"></a>llm_dev_list_empty_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[24e]"></a>llm_dev_list_search</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_rslv_list_cmd_handler_patch
</UL>

<P><STRONG><a name="[253]"></a>llm_is_dev_connected</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[272]"></a>llm_is_wl_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[273]"></a>llm_scan_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[274]"></a>llm_update_dbg_act_state_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[20a]"></a>prf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
</UL>

<P><STRONG><a name="[365]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>

<P><STRONG><a name="[264]"></a>sch_plan_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[26c]"></a>smpc_generate_stk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[26a]"></a>smpc_secure_connections_enabled</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[26b]"></a>smpc_send_ltk_req_rsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[26d]"></a>smpc_send_pairing_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[375]"></a>xqspi_send_inst_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
</UL>

<P><STRONG><a name="[370]"></a>xqspi_wait_flag_state_until_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[345]"></a>pwr_mgmt_load_context</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[386]"></a>pwr_mgmt_save_ctx_lvl_two</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[99]"></a>BLESLP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[327]"></a>SVC_handler_proc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[20e]"></a>ble_attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[20f]"></a>ble_attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[213]"></a>ble_bm_get_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[1da]"></a>ble_bm_get_ral_dev_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2f9]"></a>ble_bm_get_sec_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
</UL>

<P><STRONG><a name="[1f3]"></a>ble_bm_get_sec_info_by_peer_irk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1a6]"></a>ble_bm_set_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[2fb]"></a>ble_gapc_auth_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1d9]"></a>ble_gapc_role_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[211]"></a>ble_gapc_svc_chg_ccc_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[195]"></a>ble_gattc_indicate_cfm_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[1a3]"></a>ble_gattm_svc_start_hdl_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[1e1]"></a>ble_ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[1df]"></a>ble_ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[2fa]"></a>ble_ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2fc]"></a>ble_ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[94]"></a>ble_sdk_common_timeout_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
</UL>
<P><STRONG><a name="[21f]"></a>dfu_send_frame</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_info
</UL>

<P><STRONG><a name="[1c9]"></a>dfu_set_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
</UL>

<P><STRONG><a name="[188]"></a>find_peer_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[18a]"></a>find_unused_bond_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[2e2]"></a>fpb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[19f]"></a>fpb_load_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>

<P><STRONG><a name="[2d7]"></a>fpb_register_patch_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1a0]"></a>fpb_save_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>

<P><STRONG><a name="[1d7]"></a>gap_cache_data_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1d8]"></a>gap_cache_data_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1e0]"></a>gap_cache_data_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[1de]"></a>gap_get_actv_type_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[1d5]"></a>gap_get_adv_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[1d6]"></a>gap_get_per_sync_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[1dd]"></a>gap_reslv_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1f2]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[1a4]"></a>gatt_add_bond_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[210]"></a>gatt_bond_cccd_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[1e3]"></a>gatt_on_disconnection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[215]"></a>gatt_recovery_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[212]"></a>gattc_on_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[17d]"></a>get_align_bytes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[1f4]"></a>get_conn_idx_by_hdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[27c]"></a>get_msg_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
</UL>

<P><STRONG><a name="[307]"></a>hal_efuse_deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[308]"></a>hal_efuse_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[2c2]"></a>hal_flash_get_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[2c3]"></a>hal_flash_sector_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[1c5]"></a>hal_flash_set_security</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>

<P><STRONG><a name="[18c]"></a>nvds_del</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[2f4]"></a>nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
</UL>

<P><STRONG><a name="[2c1]"></a>nvds_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[20d]"></a>prf_get_prf_cb_by_task_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
</UL>

<P><STRONG><a name="[2f0]"></a>pwr_mgmt_dev_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[344]"></a>pwr_mgmt_dev_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[388]"></a>pwr_mgmt_dev_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[2e4]"></a>pwr_mgmt_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[382]"></a>pwr_mgmt_locker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[2f3]"></a>pwr_mgmt_mode_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[2f1]"></a>pwr_mgmt_set_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[37d]"></a>pwr_mgmt_set_wakeup_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[387]"></a>pwr_mgmt_unlocker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[11b]"></a>pwr_mgmt_update_wkup_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
</UL>

<P><STRONG><a name="[138]"></a>pwr_mgmt_wakeup_source_setup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[1c2]"></a>rf_get_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[2e5]"></a>rf_recalibration_handler_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[1be]"></a>rf_set_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[366]"></a>rwip_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[1aa]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[389]"></a>save_context_and_enter_sleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[1e4]"></a>sec_clear_bond_info_env</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[2fe]"></a>sec_enc_link</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1a1]"></a>sec_get_bond_dev_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[1db]"></a>sec_on_conn_complete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1e2]"></a>sec_on_disconn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[2fd]"></a>sec_send_pair_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1f5]"></a>sec_update_bond_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[2d6]"></a>svc_table_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[12a]"></a>sys_assert_cb_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
</UL>

<P><STRONG><a name="[190]"></a>sys_ble_heartbeat_period_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>

<P><STRONG><a name="[11f]"></a>sys_delay_us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
</UL>

<P><STRONG><a name="[242]"></a>sys_lpclk_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq
</UL>

<P><STRONG><a name="[2e0]"></a>sys_lpclk_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
</UL>

<P><STRONG><a name="[37b]"></a>sys_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[35b]"></a>sys_security_data_use_present</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[22e]"></a>sys_security_enable_status_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[9c]"></a>ultra_wfi</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[18b]"></a>update_lru_bond_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[34]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gr_interrupt.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = HardFault_Handler &rArr; hardfault_trace_handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardfault_trace_handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[326]"></a>hardfault_trace_handler</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gr_interrupt.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = hardfault_trace_handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[38a]"></a>cortex_backtrace_fault_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr_interrupt.o(RAM_CODE), UNUSED)

<P><STRONG><a name="[38]"></a>SVC_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gr_soc.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_handler_proc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[9f]"></a>pwr_wake_up_ind</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_pwr_mgmt.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pwr_wake_up_ind &rArr; hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[83]"></a>AON_EXT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_io.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AON_EXT_IRQHandler &rArr; hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_io.o(i.app_io_init)
</UL>
<P><STRONG><a name="[82]"></a>EXT1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_io.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_io.o(i.app_io_init)
</UL>
<P><STRONG><a name="[81]"></a>EXT0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_io.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_io.o(i.app_io_init)
</UL>
<P><STRONG><a name="[329]"></a>EXT2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_io.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>

<P><STRONG><a name="[32b]"></a>hal_pwr_disable_ext_wakeup</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>

<P><STRONG><a name="[137]"></a>hal_pwr_config_ext_wakeup</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_ext_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
</UL>

<P><STRONG><a name="[244]"></a>hal_pwr_get_timer_current_value</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_get_timer_current_value
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_current_value
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[2dc]"></a>rtc_calibration</STRONG> (Thumb, 640 bytes, Stack size 64 bytes, system_sdk_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rtc_calibration &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_set_clock_div
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_clear_flag_alarm
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[330]"></a>hal_exflash_warm_init</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_set_retry
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[336]"></a>warm_boot_patch</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_app
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_patch
</UL>

<P><STRONG><a name="[339]"></a>xo_offset_slowly_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>

<P><STRONG><a name="[33a]"></a>boot_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[2f5]"></a>work_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[33c]"></a>sys_is_adjust_boot_digldo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
</UL>

<P><STRONG><a name="[33b]"></a>boot_digldo_dcdc_set</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = boot_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[33d]"></a>work_digldo_dcdc_set</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[343]"></a>hal_pm_resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[33e]"></a>warm_boot_second</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>

<P><STRONG><a name="[2ef]"></a>warm_boot_first</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = warm_boot_first &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[2ee]"></a>warm_boot</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[197]"></a>platform_rng2_calibration_is_busy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
</UL>

<P><STRONG><a name="[346]"></a>enable_quad_stat</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[348]"></a>enable_quad_xmc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = enable_quad_xmc &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[34b]"></a>enable_quad_mode2</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode2
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[34d]"></a>enable_quad_mode1</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode1
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[34e]"></a>enable_quad_mode0</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_write_status
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[350]"></a>enable_quad_normal</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[351]"></a>enable_quad</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[2cd]"></a>platform_exflash_enable_quad</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
</UL>

<P><STRONG><a name="[353]"></a>platform_interrupt_protection_push</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[355]"></a>platform_interrupt_protection_pop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[357]"></a>get_sram_size</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>

<P><STRONG><a name="[358]"></a>system_calculate_sram_size</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>

<P><STRONG><a name="[2bc]"></a>mem_pwr_mgmt_work_state_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_work_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[2bd]"></a>mem_pwr_mgmt_sleep_state_set</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[359]"></a>mem_pwr_mgmt_check_processs</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[35a]"></a>ll_cgc_disable_secu_clk</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[35c]"></a>ll_cgc_enable_secu_clk</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[2cf]"></a>hal_exflash_operation_protection</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
</UL>

<P><STRONG><a name="[aa]"></a>hal_exflash_write</STRONG> (Thumb, 532 bytes, Stack size 576 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_page_program
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_data_use_present
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_enable_secu_clk
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_disable_secu_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>hal_exflash_erase</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_sector
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_chip
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[334]"></a>exflash_check_id_patch</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = exflash_check_id_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
</UL>

<P><STRONG><a name="[360]"></a>hal_exflash_deepsleep_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_exflash_deepsleep_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[361]"></a>hal_exflash_wakeup_patch</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[354]"></a>hal_exflash_suspend</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_suspend
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_push
</UL>

<P><STRONG><a name="[356]"></a>hal_exflash_resume</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_resume &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_resume
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_pop
</UL>

<P><STRONG><a name="[364]"></a>hal_exflash_operation</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[37e]"></a>ble_core_power_off</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[36a]"></a>ble_core_power_on</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[367]"></a>rwip_clkn_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[1a9]"></a>ble_sleep_time_record</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[118]"></a>ble_wakup_time_check</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_wakup_time_check
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_clkn_set
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[1ab]"></a>ble_wait_for_core_sleep_stat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[117]"></a>ble_wait_for_core_wakeup_stat</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[1ac]"></a>ble_is_in_sleep_state</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[a3]"></a>ble_sleep_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sleep_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[a5]"></a>ble_sdk_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sdk_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_IRQ_Handler_without_stack_init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[a4]"></a>ble_irq_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_irq_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQ_Handler_without_stack_init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[338]"></a>rom_cbk_execute</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rom_cbk_execute &rArr; work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[a1]"></a>rom_callback_patch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rom_callback_patch &rArr; warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rom_callback_replace)
</UL>
<P><STRONG><a name="[36b]"></a>get_remain_sleep_dur</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_remain_sleep_dur
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[9a]"></a>sys_context_save_func</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_context_save_func &rArr; boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[9b]"></a>sys_context_restore_func</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_context_restore_func &rArr; work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_dpad_le_high
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[342]"></a>system_priority_restore_func</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[332]"></a>hal_xqspi_init_ext</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_exflash_1.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[38b]"></a>hal_xqspi_set_xip_present_status_patch</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)

<P><STRONG><a name="[36d]"></a>hal_xqspi_init_ext_patch</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_set_retry
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_msp_init
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[374]"></a>hal_xqspi_command_receive_patch</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[376]"></a>hal_xqspi_command_receive_align_word</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
</UL>

<P><STRONG><a name="[371]"></a>ll_xqspi_init_patch</STRONG> (Thumb, 652 bytes, Stack size 16 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_disable_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[af]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[b1]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b3]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[38c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[38d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[38e]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[38f]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[390]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[b5]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[f9]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[b7]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[b9]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[bb]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[bc]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[bd]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[391]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[bf]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c1]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c2]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c3]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[c5]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[c7]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[c9]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[ca]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[cb]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[cd]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[392]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[cf]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d1]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[d3]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[d5]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[393]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[e0]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[d7]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[394]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[395]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[396]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[397]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[398]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[db]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[399]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[39a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[39b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[39c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[39d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[39e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[de]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[39f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[3a0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3a1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[3a2]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[3a3]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[3a4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[3a5]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[3a6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[3a7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[e5]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[3a8]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[3a9]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[3aa]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[3ab]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[3ac]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[3ad]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[3ae]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[3af]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[b2]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[3b0]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3b1]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[df]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[3b2]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[e1]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; board_init &rArr; bsp_key_init &rArr; app_key_init &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3b3]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[10f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e4]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[3b4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[e6]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_ltk_req_cb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cb
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_disc_cb
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_cb
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_ntf_ind_cb
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_inc_srvc_disc_cb
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_char_disc_cb
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_char_desc_disc_cb
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_prf_register_cb
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_keypress_notify_cb
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_key_missing_cb
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_enc_req_cb
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_enc_ind_cb
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_sdu_send_cb
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_sdu_recv_cb
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_disconn_cb
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_credit_add_cmp_cb
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_conn_req_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_conn_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_add_credits_ind_cb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_exchange_cb
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sync_lost_cb
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sync_establish_cb
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_sync_cb
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_stop_cb
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_start_cb
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_req_ind_cb
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_rslv_addr_read_cb
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_psm_manager_cb
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_phy_update_cb
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_peer_name_ind_cb
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_peer_info_get_cb
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_param_set_cb
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_le_pkt_size_info_cb
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_cb
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_info_get_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_update_req_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_update_cb
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_info_get_cb
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connect_cb
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connect_cancel_cb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_auto_connection_timeout_cb
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_stop_cb
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_cb
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_report_ind_cb
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_update_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cplt_callback
</UL>

<P><STRONG><a name="[36]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr_interrupt.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr_interrupt.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[ea]"></a>vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[ec]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, __2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardfault_trace_handler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_demo
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_handler
</UL>

<P><STRONG><a name="[ee]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[ef]"></a>__2snprintf</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, __2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[f1]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[f2]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[f0]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[c0]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[f6]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[c6]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[ce]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[b8]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[f7]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[121]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_evt_handle
</UL>

<P><STRONG><a name="[124]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler_patch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_cb
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_enc_req_cb
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sync_establish_cb
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_info_get_cb
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connect_cb
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_report_ind_cb
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
</UL>

<P><STRONG><a name="[fa]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3b5]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tiny_rw_section_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[3b6]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3b7]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_filter_list_clear
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>

<P><STRONG><a name="[fc]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[e9]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[125]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
</UL>

<P><STRONG><a name="[3b9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[b0]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[f3]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f4]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f5]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b6]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[eb]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[7d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __2snprintf.o(.text)
<LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d0]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[d2]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[ed]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[100]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[c8]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[103]"></a>_printf_longlong_oct</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[c4]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[cc]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[102]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3bb]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[10c]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[10d]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[d4]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[d6]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[ff]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[101]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[10e]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[da]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[10b]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[105]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e3]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[318]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[106]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[111]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[110]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[112]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[113]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[107]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[108]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[114]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[115]"></a>BLESLP_Handler_without_stack_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.BLESLP_Handler_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BLESLP_Handler_without_stack_init &rArr; ble_wakup_time_check
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_wakeup_stat
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
</UL>

<P><STRONG><a name="[369]"></a>BLE_IRQ_Handler_without_stack_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
</UL>

<P><STRONG><a name="[368]"></a>BLE_SDK_IRQ_Handler_without_stack_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_SDK_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
</UL>

<P><STRONG><a name="[a6]"></a>SLPTIMER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_timer.o(i.SLPTIMER_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_timer.o(i.sleep_timer_handler_register)
</UL>
<P><STRONG><a name="[1c4]"></a>SystemCoreGetClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gr_soc.o(i.SystemCoreGetClock))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[11a]"></a>SystemCoreSetClock</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gr_soc.o(i.SystemCoreSetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreSetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_update_wkup_param
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[7a]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gr_system.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>UART0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_uart.o(i.UART0_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(i.app_uart_init)
</UL>
<P><STRONG><a name="[88]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_uart.o(i.UART1_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(i.app_uart_init)
</UL>
<P><STRONG><a name="[37]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr_interrupt.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup.o(RESET)
<LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[10a]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[f8]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[e7]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_log.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[11d]"></a>adc_conversion</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, platform_adc.o(i.adc_conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adc_conversion
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adc_disable_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[120]"></a>add_ltk_item</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.add_ltk_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = add_ltk_item &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[229]"></a>aon_gpio_read_flag_it_patch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_aon_gpio_patch.o(i.aon_gpio_read_flag_it_patch))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>

<P><STRONG><a name="[30b]"></a>aon_voltage_set</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, platform_sdk.o(i.aon_voltage_set))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[3c]"></a>app_assert_err_cb</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_err_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = app_assert_err_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[129]"></a>app_assert_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_assert.o(i.app_assert_init))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_assert_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[3d]"></a>app_assert_param_cb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_param_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = app_assert_param_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>app_assert_warn_cb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_warn_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = app_assert_warn_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[12d]"></a>app_gpiote_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, app_gpiote.o(i.app_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_demo
</UL>

<P><STRONG><a name="[12f]"></a>app_io_deinit</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, app_io.o(i.app_io_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_deinit &rArr; hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_deinit
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
</UL>

<P><STRONG><a name="[91]"></a>app_io_event_handler</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, main.o(i.app_io_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = app_io_event_handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.gpio_interrupt_demo)
<LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>app_io_event_register_cb</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, app_io.o(i.app_io_event_register_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_demo
</UL>

<P><STRONG><a name="[136]"></a>app_io_init</STRONG> (Thumb, 354 bytes, Stack size 72 bytes, app_io.o(i.app_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_register_nvic
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
</UL>

<P><STRONG><a name="[133]"></a>app_io_read_pin</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app_io.o(i.app_io_read_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_io_read_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_read_pin
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read_pin
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_read_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_press_state_polling
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_handler
</UL>

<P><STRONG><a name="[142]"></a>app_io_toggle_pin</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_io.o(i.app_io_toggle_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_io_toggle_pin &rArr; hal_aon_gpio_toggle_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_toggle_pin
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_toggle_pin
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_toggle_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
</UL>

<P><STRONG><a name="[146]"></a>app_io_write_pin</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_io.o(i.app_io_write_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
</UL>

<P><STRONG><a name="[152]"></a>app_key_core_cb_register</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key_core.o(i.app_key_core_cb_register))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
</UL>

<P><STRONG><a name="[14e]"></a>app_key_core_is_all_release</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_key_core.o(i.app_key_core_is_all_release))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_evt_handler
</UL>

<P><STRONG><a name="[154]"></a>app_key_core_key_pressed_record</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_key_core.o(i.app_key_core_key_pressed_record))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_press_state_polling
</UL>

<P><STRONG><a name="[12c]"></a>app_key_core_key_wait_polling_record</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_key_core.o(i.app_key_core_key_wait_polling_record))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_event_handler
</UL>

<P><STRONG><a name="[150]"></a>app_key_core_polling_10ms</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_key_core.o(i.app_key_core_polling_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_key_core_polling_10ms &rArr; app_key_core_click_read &rArr; app_key_core_state_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_click_read
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_handler
</UL>

<P><STRONG><a name="[89]"></a>app_key_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, board_sk.o(i.app_key_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> board_sk.o(i.bsp_key_init)
</UL>
<P><STRONG><a name="[151]"></a>app_key_init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_key.o(i.app_key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_key_init &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
</UL>

<P><STRONG><a name="[14f]"></a>app_key_timer_stop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_key.o(i.app_key_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_key_timer_stop &rArr; app_timer_delete &rArr; app_timer_stop_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_evt_handler
</UL>

<P><STRONG><a name="[128]"></a>app_log_flush</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_log.o(i.app_log_flush))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardfault_trace_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[158]"></a>app_log_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_log.o(i.app_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_log_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[127]"></a>app_log_output</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, app_log.o(i.app_log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = app_log_output &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_strcpy
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_is_fmt_set
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[155]"></a>app_timer_create</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timer_start
</UL>

<P><STRONG><a name="[157]"></a>app_timer_delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_timer.o(i.app_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_timer_delete &rArr; app_timer_stop_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timer_stop
</UL>

<P><STRONG><a name="[156]"></a>app_timer_start_api</STRONG> (Thumb, 282 bytes, Stack size 56 bytes, app_timer.o(i.app_timer_start_api))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_timer_start_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler_register
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_rest_get
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_timer_node_created
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_need_insert_front
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_insert
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_node_init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timer_start
</UL>

<P><STRONG><a name="[15f]"></a>app_timer_stop_api</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop_api))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_timer_stop_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_rest_get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_remove
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
</UL>

<P><STRONG><a name="[16b]"></a>app_uart_dma_start_transmit_async</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, app_uart_dma.o(i.app_uart_dma_start_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_uart_dma_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_cplt_callback
</UL>

<P><STRONG><a name="[8c]"></a>app_uart_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, board_sk.o(i.app_uart_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> board_sk.o(i.bsp_uart_init)
</UL>
<P><STRONG><a name="[16f]"></a>app_uart_flush</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, app_uart.o(i.app_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_uart_flush &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_transmit_it
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_flush
</UL>

<P><STRONG><a name="[173]"></a>app_uart_init</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, app_uart.o(i.app_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = app_uart_init &rArr; uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_register_nvic
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
</UL>

<P><STRONG><a name="[17b]"></a>app_uart_transmit_sync</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_uart.o(i.app_uart_transmit_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_uart_transmit_sync
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_send
</UL>

<P><STRONG><a name="[183]"></a>atts_l2cc_pdu_recv_handler_patch</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, atts_patch.o(i.atts_l2cc_pdu_recv_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu (via Veneer)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_hdl_value_cfm (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[ac]"></a>ble_bm_set_sec_info_patch</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ble_bm_set_sec_info_patch &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lru_bond_list
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_unused_bond_idx
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_peer_addr
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>ble_communication_core_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.ble_communication_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>

<P><STRONG><a name="[18f]"></a>ble_core_init_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_core_init_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ble_heartbeat_period_set
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
</UL>

<P><STRONG><a name="[19e]"></a>ble_gatt_mtu_exch_allow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_sdk_gatt_task_patch.o(i.ble_gatt_mtu_exch_allow))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>

<P><STRONG><a name="[193]"></a>ble_gattc_indicate_cfm</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_indicate_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm_rom
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
</UL>

<P><STRONG><a name="[196]"></a>ble_is_prevent_sleep_without_stack_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_is_prevent_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_is_prevent_sleep_without_stack_init &rArr; platform_rng2_calibration_is_busy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[192]"></a>ble_profile_evt_handle</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ble_profile_patch.o(i.ble_profile_evt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_evt_handle
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_connect_state_evt
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_evt_handle
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_evt_handle
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_connect_state_evt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_common_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
</UL>

<P><STRONG><a name="[22]"></a>ble_sdk_gatt_mtu_changed_ind_handler_patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_exch_allow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>ble_sdk_gattc_event_ind_handler_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_sdk_gattc_event_ind_handler_patch &rArr; ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[216]"></a>ble_sdk_gattc_get_record_profile_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_sdk_prf_cllient_patch.o(i.ble_sdk_gattc_get_record_profile_id))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_evt_handle
</UL>

<P><STRONG><a name="[21]"></a>ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sdk_gatts_svc_changed_cfg_ind_handler_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_get_bond_dev_addr
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_bond_cccd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattm_svc_start_hdl_get
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1a7]"></a>ble_sec_ltk_req_cb</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, ble_event_patch.o(i.ble_sec_ltk_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = ble_sec_ltk_req_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1a8]"></a>ble_sleep_successfully_without_stack_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_successfully_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_sleep_stat
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[a2]"></a>ble_sleep_without_stack_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sleep_without_stack_init &rArr; ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_sleep_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[2d2]"></a>ble_wakeup_osc_time_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_get))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2d3]"></a>ble_wakeup_osc_time_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1ad]"></a>board_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, board_sk.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = board_init &rArr; bsp_key_init &rArr; app_key_init &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_key_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b0]"></a>bsp_key_init</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, board_sk.o(i.bsp_key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = bsp_key_init &rArr; app_key_init &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[1af]"></a>bsp_led_init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, board_sk.o(i.bsp_led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bsp_led_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[1ae]"></a>bsp_log_init</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, board_sk.o(i.bsp_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = bsp_log_init &rArr; bsp_uart_init &rArr; app_uart_init &rArr; uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[8a]"></a>bsp_uart_flush</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, board_sk.o(i.bsp_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_uart_flush &rArr; app_uart_flush &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> board_sk.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[1b1]"></a>bsp_uart_init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, board_sk.o(i.bsp_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bsp_uart_init &rArr; app_uart_init &rArr; uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[8b]"></a>bsp_uart_send</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, board_sk.o(i.bsp_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_uart_send &rArr; app_uart_transmit_sync
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
</UL>
<BR>[Address Reference Count : 1]<UL><LI> board_sk.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[30e]"></a>clk_period_1V_set</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, platform_sdk.o(i.clk_period_1V_set))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[1b2]"></a>cold_patch_apply</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cold_patch.o(i.cold_patch_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cold_patch_apply &rArr; rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_replace
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_replace
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[9d]"></a>cpll_calibration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sdk.o(i.cpll_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = cpll_calibration &rArr; cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[1c0]"></a>cpll_calibration_init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, platform_sdk.o(i.cpll_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = cpll_calibration_init &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[1bf]"></a>cpll_lock_check_recover</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, platform_sdk.o(i.cpll_lock_check_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[30d]"></a>current_shape_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, platform_sdk.o(i.current_shape_set))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[1b6]"></a>dfu_cmd_handler_replace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_set_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[27d]"></a>find_new_msg_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ke_task_patch.o(i.find_new_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_msg_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[1cf]"></a>finish_encryt_check_by_llcp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, llc_encrypt_patch.o(i.finish_encryt_check_by_llcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[1d2]"></a>fpb_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, platform_patch.o(i.fpb_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fpb_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[98]"></a>fpb_patch_enable</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, fpb_patch_init.o(i.fpb_patch_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fpb_patch_enable &rArr; fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(i.platform_init)
</UL>
<P><STRONG><a name="[7f]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, app_log.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[1d1]"></a>fun_replace_by_svc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, platform_patch.o(i.fun_replace_by_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_svc_cmd
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ori_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[5]"></a>gap_activity_stopped_ind_handler_patch</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_activity_stopped_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>gap_cmp_evt_handler_patch</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_cmp_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>gap_connection_req_ind_handler_patch</STRONG> (Thumb, 338 bytes, Stack size 592 bytes, ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gap_connection_req_ind_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_clear_cccd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_role_get
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_conn_complete
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_reslv_addr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_ral_dev_list
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>gap_dev_bdaddr_ind_handler_patch</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_dev_bdaddr_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_malloc
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_free
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_actv_type_by_actv_idx
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_save
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>gap_disconnect_ind_handler_patch</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_disconnect_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_clear_bond_info_env
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_disconn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>gapc_hci_handler_patch</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.gapc_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapc_hci_handler_patch &rArr; hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>gapm_activity_create_cmd_handler_patch</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_activity_create_cmd_handler_patch &rArr; gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_free_idx
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_check_create_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1ee]"></a>gapm_adv_filter_list_clear</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapm_scan_patch.o(i.gapm_adv_filter_list_clear))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler_patch
</UL>

<P><STRONG><a name="[4]"></a>gapm_cmp_evt_handler_patch</STRONG> (Thumb, 264 bytes, Stack size 200 bytes, ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gapm_cmp_evt_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_clear_cccd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_update_bond_info
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info_by_peer_irk
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_hdl
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>gapm_hci_handler_patch</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapm_task_patch.o(i.gapm_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_hci_handler_patch &rArr; find_new_gapm_hci_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_gapm_hci_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1ed]"></a>gapm_init_create_patch</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gapm_init_patch.o(i.gapm_init_create_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_addr_type_valid
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[8e]"></a>gapm_init_start_patch</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gapm_init_patch.o(i.gapm_init_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_init_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_check_param
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[8f]"></a>gapm_init_stop_patch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_init_patch.o(i.gapm_init_stop_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_init_stop_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_create_con_cancel_cmd
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[201]"></a>gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gapm_scan_patch.o(i.gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>

<P><STRONG><a name="[25]"></a>gapm_set_dev_config_cmd_handler_patch</STRONG> (Thumb, 590 bytes, Stack size 48 bytes, gapm_cfg_patch.o(i.gapm_set_dev_config_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_set_dev_config_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init_attr
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_le_psm_cleanup
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_attr
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_dle_val_check
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_destroy (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_update_perm (via Veneer)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[20c]"></a>gatt_clear_cccd_patch</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, ble_sdk_gatts_patch.o(i.gatt_clear_cccd_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_clear_cccd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_bond_cccd_check
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_svc_chg_ccc_set
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_prf_cb_by_task_id
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_uuid16_comp
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_get_attribute
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattm_svc_start_hdl_get
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[1a2]"></a>gatt_find_item_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_sdk_gatts_patch.o(i.gatt_find_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_find_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[1dc]"></a>gatt_on_connection_func_patch</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_sdk_gatts_patch.o(i.gatt_on_connection_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatt_on_connection_func_patch &rArr; gatt_clear_cccd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_on_connection
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_recovery_cccd
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_gatt_info
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd_patch
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[65]"></a>gatt_prf_register_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.gatt_prf_register_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gatt_prf_register_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>gattc_char_desc_disc_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_char_desc_disc_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_char_desc_disc_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>gattc_char_disc_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_char_disc_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_char_disc_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>gattc_inc_srvc_disc_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_inc_srvc_disc_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_inc_srvc_disc_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>gattc_ntf_ind_cb</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_ntf_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>gattc_read_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_read_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_read_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>gattc_srvc_browse_cb</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_srvc_browse_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_srvc_browse_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>gattc_srvc_disc_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_srvc_disc_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_srvc_disc_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>gattc_write_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.gattc_write_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gattc_write_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[218]"></a>get_data_from_adc</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, platform_adc.o(i.get_data_from_adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = get_data_from_adc &rArr; adc_conversion
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[2b9]"></a>get_wakeup_flag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr_soc.o(i.get_wakeup_flag))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[220]"></a>gpio_interrupt_demo</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, main.o(i.gpio_interrupt_demo))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = gpio_interrupt_demo &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_register_cb
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[221]"></a>gpio_output_input_demo</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, main.o(i.gpio_output_input_demo))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = gpio_output_input_demo &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_toggle_pin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[222]"></a>gpiote_demo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.gpiote_demo))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gpiote_demo &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e6]"></a>hal_adc_is_using</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, platform_sdk.o(i.hal_adc_is_using))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[41]"></a>hal_aon_gpio_callback</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, app_io.o(i.hal_aon_gpio_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_aon_gpio_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_aon_gpio_1.o(.data)
</UL>
<P><STRONG><a name="[131]"></a>hal_aon_gpio_deinit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_1.o(i.hal_aon_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[223]"></a>hal_aon_gpio_deinit_ext</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
</UL>

<P><STRONG><a name="[13d]"></a>hal_aon_gpio_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_aon_gpio_1.o(i.hal_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_register_callback
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[226]"></a>hal_aon_gpio_init_ext</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
</UL>

<P><STRONG><a name="[228]"></a>hal_aon_gpio_irq_handler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_br_callback
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_gpio_read_flag_it_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AON_EXT_IRQHandler
</UL>

<P><STRONG><a name="[144]"></a>hal_aon_gpio_toggle_pin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_toggle_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_gpio_toggle_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_toggle_pin
</UL>

<P><STRONG><a name="[148]"></a>hal_aon_gpio_write_pin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_write_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[135]"></a>hal_dwt_disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_handler
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[134]"></a>hal_dwt_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_event_handler
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[304]"></a>hal_efuse_deinit_ext</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[305]"></a>hal_efuse_init_ext</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_efuse_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[22b]"></a>hal_exflash_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr_soc.o(i.hal_exflash_read))
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read_rom
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>

<P><STRONG><a name="[1bd]"></a>hal_flash_erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[22d]"></a>hal_flash_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hal_flash_patch.o(i.hal_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[1c6]"></a>hal_flash_read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>

<P><STRONG><a name="[1c8]"></a>hal_flash_write_r</STRONG> (Thumb, 110 bytes, Stack size 288 bytes, hal_flash_patch.o(i.hal_flash_write_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
</UL>

<P><STRONG><a name="[130]"></a>hal_gpio_deinit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio_1.o(i.hal_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[42]"></a>hal_gpio_exti_callback</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, app_io.o(i.hal_gpio_exti_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_gpio_exti_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin_index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_gpio_1.o(.data)
</UL>
<P><STRONG><a name="[13c]"></a>hal_gpio_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio_1.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[234]"></a>hal_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gr55xx_hal_1.o(i.hal_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_register_callback
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_wake_up_ind
</UL>

<P><STRONG><a name="[132]"></a>hal_msio_deinit</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_msio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[13e]"></a>hal_msio_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[141]"></a>hal_msio_read_pin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_read_pin))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_read_pin_sym
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
</UL>

<P><STRONG><a name="[145]"></a>hal_msio_toggle_pin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_toggle_pin))
<BR><BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_toggle_pin_sym
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_toggle_pin
</UL>

<P><STRONG><a name="[149]"></a>hal_msio_write_pin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_write_pin))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin_sym
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[40]"></a>hal_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_1.o(i.hal_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_1.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>hal_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_1.o(i.hal_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_1.o(.data)
</UL>
<P><STRONG><a name="[23b]"></a>hal_pwr_config_timer_wakeup</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gr55xx_hal_pwr_1.o(i.hal_pwr_config_timer_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_register_timer_elaspsed_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_stop
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_config_and_start
</UL>

<P><STRONG><a name="[92]"></a>hal_pwr_sleep_timer_elapsed_callback</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, app_timer.o(i.hal_pwr_sleep_timer_elapsed_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_pwr_sleep_timer_elapsed_callback &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_mark
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_execute
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_remove
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_insert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_pwr_1.o(i.hal_pwr_config_timer_wakeup)
</UL>
<P><STRONG><a name="[23e]"></a>hal_sleep_timer_config_and_start</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gr55xx_hal_sleep_timer_patch.o(i.hal_sleep_timer_config_and_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_sleep_timer_config_and_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
</UL>

<P><STRONG><a name="[23f]"></a>hal_sleep_timer_get_clock_freq</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gr55xx_hal_sleep_timer_patch.o(i.hal_sleep_timer_get_clock_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_rest_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[243]"></a>hal_sleep_timer_get_current_value</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gr55xx_hal_sleep_timer_patch.o(i.hal_sleep_timer_get_current_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_sleep_timer_get_current_value &rArr; hal_pwr_get_timer_current_value
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_rest_get
</UL>

<P><STRONG><a name="[2b8]"></a>hal_sleep_timer_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gr55xx_hal_sleep_timer_patch.o(i.hal_sleep_timer_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
</UL>

<P><STRONG><a name="[245]"></a>hal_sleep_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gr55xx_hal_sleep_timer_patch.o(i.hal_sleep_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_sleep_timer_stop &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_stop
</UL>

<P><STRONG><a name="[48]"></a>hal_uart_abort_cplt_callback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_uart.o(i.hal_uart_abort_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_abort_cplt_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>hal_uart_abort_rx_cplt_callback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_uart.o(i.hal_uart_abort_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_abort_rx_cplt_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>hal_uart_abort_tx_cplt_callback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_uart.o(i.hal_uart_abort_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_abort_tx_cplt_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[176]"></a>hal_uart_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart_1.o(i.hal_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[47]"></a>hal_uart_error_callback</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_uart.o(i.hal_uart_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_error_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[170]"></a>hal_uart_get_state</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_uart_patch.o(i.hal_uart_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep
</UL>

<P><STRONG><a name="[177]"></a>hal_uart_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart_1.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[44]"></a>hal_uart_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart_1.o(i.hal_uart_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>hal_uart_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart_1.o(i.hal_uart_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>hal_uart_rx_cplt_callback</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_uart.o(i.hal_uart_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_rx_cplt_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>hal_uart_tx_cplt_callback</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_uart.o(i.hal_uart_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_tx_cplt_callback &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_dma_start_transmit_async
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_id
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart_1.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>hci_le_add_dev_to_rslv_list_cmd_handler_patch</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, llm_hci_patch.o(i.hci_le_add_dev_to_rslv_list_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_add_dev_to_rslv_list_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_add
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>hci_le_add_dev_to_wlst_cmd_handler_patch</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_add_dev_to_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_empty_entry
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_add
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>hci_le_clear_rslv_list_cmd_handler_patch</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, llm_hci_patch.o(i.hci_le_clear_rslv_list_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_clear_rslv_list_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_clear
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>hci_le_clear_wlst_cmd_handler_patch</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_clear_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>hci_le_cmd_cmp_evt_init_handler_patch</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_cmd_cmp_evt_init_handler_patch &rArr; init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_stopping_handler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_started_handler
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>hci_le_cmd_cmp_evt_scan_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gapm_scan_patch.o(i.hci_le_cmd_cmp_evt_scan_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_cmd_cmp_evt_scan_handler_patch &rArr; scan_hci_le_cmd_cmp_evt_starting_handler_patch &rArr; gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_hci_le_cmd_cmp_evt_stopping_handler
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_hci_le_cmd_cmp_evt_starting_handler_patch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_filter_list_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[97]"></a>hci_le_con_upd_cmd_handler_patch</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_con_upd_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_cmd_stat_send
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[2d]"></a>hci_le_ext_create_con_cmd_handler_patch</STRONG> (Thumb, 810 bytes, Stack size 208 bytes, llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = hci_le_ext_create_con_cmd_handler_patch &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_stat_send
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_addr_is_in_ral_list
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>hci_le_rmv_dev_from_wlst_cmd_handler_patch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_rmv_dev_from_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>hci_le_set_addr_resol_en_cmd_handler_patch</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_set_addr_resol_en_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_set_addr_resol_en_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rpa_renew
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>hci_le_set_ext_scan_en_cmd_handler_patch</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_set_ext_scan_en_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_update_dbg_act_state_info
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_scan_start
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_empty
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_stop
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_params_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_is_empty
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>hci_le_set_ext_scan_param_cmd_handler_patch</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_set_ext_scan_param_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>hci_le_set_priv_mode_cmd_handler_patch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llm_hci_patch.o(i.hci_le_set_priv_mode_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_set_priv_mode_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_priv_mode_update
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>hci_nb_cmp_pkts_evt_handler_patch</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_nb_cmp_pkts_evt_handler_patch &rArr; get_id_by_conn_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_by_conn_idx
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>hci_send_2_controller_patch</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, hci_patch.o(i.hci_send_2_controller_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_send_2_controller_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_look_for_cmd_desc
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[9]"></a>host_to_sdk_msg_handler_patch</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = host_to_sdk_msg_handler_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_msg_handler_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[27e]"></a>i0nd_ioldo_3v_get</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, platform_sdk.o(i.i0nd_ioldo_3v_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
</UL>

<P><STRONG><a name="[282]"></a>internal_3p3_ioldo_update</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, platform_sdk.o(i.internal_3p3_ioldo_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
</UL>

<P><STRONG><a name="[ad]"></a>ke_task_schedule_patch</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, ke_task_patch.o(i.ke_task_schedule_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ke_task_schedule_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_handler_get
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_is_free
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[a]"></a>l2cc_pdu_recv_ind_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2cc_pdu_recv_ind_handler_patch &rArr; atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_l2cc_pdu_recv_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1f1]"></a>l2cm_l2cap_tx_handler_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[28d]"></a>ldo_voltage_set</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, platform_sdk.o(i.ldo_voltage_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[227]"></a>ll_aon_gpio_init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>

<P><STRONG><a name="[237]"></a>ll_msio_init</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
</UL>

<P><STRONG><a name="[14]"></a>llc_auth_payl_nearly_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_nearly_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>llc_auth_payl_real_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_real_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>llc_hci_command_handler_patch</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, llc_hci_patch.o(i.llc_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_hci_command_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_new_handler_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[295]"></a>llc_hci_new_handler_find</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_hci_patch.o(i.llc_hci_new_handler_find))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_command_handler_patch
</UL>

<P><STRONG><a name="[b]"></a>llc_loc_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_loc_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>llc_op_dl_upd_ind_handler_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_op_dl_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>llc_rem_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_rem_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>lld_acl_rx_ind_handler_patch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, llc_task_patch.o(i.lld_acl_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_acl_rx_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>lld_ch_map_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_ch_map_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2b2]"></a>lld_con_ci_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_ci_get))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>

<P><STRONG><a name="[297]"></a>lld_con_env_is_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_env_is_free))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>

<P><STRONG><a name="[13]"></a>lld_con_offset_upd_ind_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_con_offset_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>lld_con_param_upd_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_con_param_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2a8]"></a>lld_con_ultra_link_update</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lld_con_patch.o(i.lld_con_ultra_link_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_con_ultra_link_update
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[17]"></a>lld_init_end_ind_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llm_init_patch.o(i.lld_init_end_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_init_end_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_end_ind_handler
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_lcp_get_noise_scan_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2a6]"></a>lld_lcp_get_noise_scan_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lld_lcp_scan.o(i.lld_lcp_get_noise_scan_flag))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_end_ind_handler_patch
</UL>

<P><STRONG><a name="[d]"></a>lld_llcp_rx_ind_handler_patch</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lld_llcp_rx_ind_handler_patch &rArr; finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_ultra_link_update
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>lld_llcp_tx_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_llcp_tx_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>lld_phy_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_phy_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>llm_ch_map_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llm_init_patch.o(i.llm_ch_map_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = llm_ch_map_to_handler_patch &rArr; llm_ch_map_update_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_update_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2ac]"></a>llm_ch_map_update_patch</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, llm_init_patch.o(i.llm_ch_map_update_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = llm_ch_map_update_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_per_adv_ch_map_update
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_set
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_assess_data_get
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send_basic
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_nb_good_le_channels (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_rx_qual_asses_get
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_read_clock
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_ci_get
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ch_map_to_handler_patch
</UL>

<P><STRONG><a name="[7]"></a>llm_hci_command_handler_patch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llm_hci_command_handler_patch &rArr; find_new_hci_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_hci_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[e2]"></a>main</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = main &rArr; board_init &rArr; bsp_key_init &rArr; app_key_init &rArr; app_gpiote_init &rArr; app_io_event_register_cb &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_demo
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_input_demo
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_demo
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7b]"></a>main_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gr_platform.o(i.main_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = main_init &rArr; warm_boot_process &rArr; pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_process
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wakeup_flag
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(.text)
</UL>
<P><STRONG><a name="[2bb]"></a>mem_pwr_mgmt_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sram.o(i.mem_pwr_mgmt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mem_pwr_mgmt_init &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[189]"></a>nvds_put</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, sdk_nvds_patch.o(i.nvds_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_hdr_checksum
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>

<P><STRONG><a name="[2c4]"></a>platform_clock_init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, platform_clock.o(i.platform_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clk_mgmt_init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2c9]"></a>platform_disable_sleep_timer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, platform_clock.o(i.platform_disable_sleep_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_disable_sleep_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[2cc]"></a>platform_flash_enable_quad</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_exflash.o(i.platform_flash_enable_quad))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = platform_flash_enable_quad &rArr; platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
</UL>

<P><STRONG><a name="[2ce]"></a>platform_flash_protection</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, platform_exflash.o(i.platform_flash_protection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_flash_protection &rArr; hal_exflash_operation_protection
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
</UL>

<P><STRONG><a name="[2d0]"></a>platform_init</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, gr_soc.o(i.platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_set_exflash_readid_delay
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_table_register
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_rtc_crystal_delay
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_push
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_pop
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_register_patch_init_func
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_set
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_get
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
</UL>

<P><STRONG><a name="[2de]"></a>platform_init_pop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_pop))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2d4]"></a>platform_init_push</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_push))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2df]"></a>platform_param_adjust</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_sdk.o(i.platform_param_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = platform_param_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[2d8]"></a>platform_sdk_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, platform_sdk.o(i.platform_sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = platform_sdk_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_register_nvic
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration_handler_register
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2d5]"></a>platform_set_rtc_crystal_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, platform_clock.o(i.platform_set_rtc_crystal_delay))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2db]"></a>pmu_calibration_handler</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, platform_sdk.o(i.pmu_calibration_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = pmu_calibration_handler &rArr; cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lp_clk
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_is_using
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[a0]"></a>pwr_enter_sleep_check</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_pwr_mgmt.o(i.pwr_enter_sleep_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_enter_sleep_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[1b4]"></a>pwr_mgmt_shutdown_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[2ed]"></a>pwr_mgmt_warm_boot</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.pwr_mgmt_warm_boot))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_process
</UL>

<P><STRONG><a name="[178]"></a>pwr_register_sleep_cb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_pwr_mgmt.o(i.pwr_register_sleep_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_callback
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[1c1]"></a>read_adc_value</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, platform_adc.o(i.read_adc_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[30c]"></a>retention_mem_set</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, platform_sdk.o(i.retention_mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[2e8]"></a>rf_calibration_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.rf_calibration_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_calibration_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[18e]"></a>rf_communication_core_init_patch</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_communication_core_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>

<P><STRONG><a name="[174]"></a>ring_buffer_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ring_buffer.o(i.ring_buffer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ring_buffer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[16c]"></a>ring_buffer_items_count_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ring_buffer.o(i.ring_buffer_items_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_dma_start_transmit_async
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[16d]"></a>ring_buffer_read</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ring_buffer.o(i.ring_buffer_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_dma_start_transmit_async
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[2dd]"></a>rng_calibration</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, system_sdk_patch.o(i.rng_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rng_calibration &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_wdt_get_counter
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1b7]"></a>rom_callback_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rom_callback_replace))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[1b3]"></a>rwip_sleep_without_stack_init_replace</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[25b]"></a>scan_hci_le_cmd_cmp_evt_starting_handler_patch</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gapm_scan_patch.o(i.scan_hci_le_cmd_cmp_evt_starting_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scan_hci_le_cmd_cmp_evt_starting_handler_patch &rArr; gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler_patch
</UL>

<P><STRONG><a name="[2f7]"></a>sdk_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sdk_ram_init_patch.o(i.sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[1a5]"></a>sec_check_conn_bond_patch</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_sdk_sec_patch.o(i.sec_check_conn_bond_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[1f]"></a>sec_rcv_encrypt_req_ind_handler_patch</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = sec_rcv_encrypt_req_ind_handler_patch &rArr; ble_sec_ltk_req_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_send
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_alloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_auth_get
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_ltk_req_cb
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>sec_rcv_sec_req_ind_handler_patch</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sec_rcv_sec_req_ind_handler_patch &rArr; sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_send_pair_req
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_enc_link
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_soc.o(.data)
</UL>
<P><STRONG><a name="[2ff]"></a>soc_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr_soc.o(i.soc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = soc_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tiny_rw_section_init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[13b]"></a>soc_register_nvic</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr_soc.o(i.soc_register_nvic))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler_register
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[2e7]"></a>sys_adc_trim_get</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, system_sdk_patch.o(i.sys_adc_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_adc_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[302]"></a>sys_device_package_get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_package_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
</UL>

<P><STRONG><a name="[303]"></a>sys_device_sram_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_sram_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>

<P><STRONG><a name="[301]"></a>sys_efuse_info_sync</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_efuse_info_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init_ext
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
</UL>

<P><STRONG><a name="[27f]"></a>sys_get_efuse_io_ldo</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_get_efuse_io_ldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>

<P><STRONG><a name="[290]"></a>sys_is_use_ext_flash</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_ext_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_ext_flash &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[28f]"></a>sys_is_use_internal_3p3_ioldo</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_internal_3p3_ioldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[28e]"></a>sys_pmu_trim_get</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_pmu_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_pmu_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[1b5]"></a>system_conf_correction</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cold_patch.o(i.system_conf_correction))
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_cfg_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[2e3]"></a>system_low_power_set</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, platform_sdk.o(i.system_low_power_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_low_power_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[ae]"></a>system_platform_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gr_platform.o(i.system_platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = system_platform_init &rArr; soc_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_table_init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr_platform.o(.init_array)
</UL>
<P><STRONG><a name="[2d9]"></a>system_pmu_deinit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, platform_sdk.o(i.system_pmu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = system_pmu_deinit &rArr; system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2da]"></a>system_pmu_init</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, platform_sdk.o(i.system_pmu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2e1]"></a>system_priority_init</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, platform_sdk.o(i.system_priority_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[300]"></a>tiny_rw_section_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, platform_sdk.o(i.tiny_rw_section_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tiny_rw_section_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_init
</UL>

<P><STRONG><a name="[30f]"></a>ton_value_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, platform_sdk.o(i.ton_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ton_value_set
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[313]"></a>update_io_ldo_to_prevent_leakage</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, platform_sdk.o(i.update_io_ldo_to_prevent_leakage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[2ec]"></a>update_lp_clk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(i.update_lp_clk))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[30a]"></a>vector_table_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gr_soc.o(i.vector_table_init))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_process
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[309]"></a>warm_boot_cfg_patch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, boot_patch.o(i.warm_boot_cfg_patch))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>

<P><STRONG><a name="[2ba]"></a>warm_boot_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gr_soc.o(i.warm_boot_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = warm_boot_process &rArr; pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_table_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[2d1]"></a>warm_boot_set_exflash_readid_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, warm_boot_patch.o(i.warm_boot_set_exflash_readid_delay))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[dd]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[80]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[21d]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[3bc]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[3bd]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[3be]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[3bf]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[3c0]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[240]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
</UL>

<P><STRONG><a name="[319]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[21b]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[31d]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2e9]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[31e]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[241]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[31f]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[219]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[3c1]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[2b7]"></a>__aeabi_ul2d</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
</UL>

<P><STRONG><a name="[3c2]"></a>_ll_uto_d</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull), UNUSED)

<P><STRONG><a name="[21e]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_startup
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[320]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[31c]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[31b]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[21c]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[321]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[21a]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[323]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[325]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_f
</UL>

<P><STRONG><a name="[d8]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[3c3]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[3c4]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[2b6]"></a>__aeabi_f2ulz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixull.o(x$fpl$llufromf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_timer_rest_get
</UL>

<P><STRONG><a name="[324]"></a>_ll_ufrom_f</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ffixull.o(x$fpl$llufromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[ba]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[be]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[379]"></a>pwr_mgmt_ble_wakeup</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[37c]"></a>pwr_mgmt_switch_dig_core_mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
</UL>

<P><STRONG><a name="[37a]"></a>pwr_mgmt_check_ext_timer</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwr_mgmt_check_ext_timer &rArr; hal_pwr_get_timer_current_value
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpcycles_2_hus (via Veneer)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value (via Veneer)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_switch_dig_core_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch
</UL>

<P><STRONG><a name="[381]"></a>pwr_mgmt_ultra_sleep</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command (via Veneer)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
</UL>

<P><STRONG><a name="[385]"></a>pwr_mgmt_schedule</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_context_and_enter_sleep (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_unlocker (via Veneer)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_save_ctx_lvl_two (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_suspend (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1ca]"></a>exflash_io_pull_config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gr_soc.o(i.exflash_io_pull_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exflash_io_pull_config &rArr; ll_gpio_set_pin_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1cb]"></a>ll_gpio_set_pin_pull</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gr_soc.o(i.ll_gpio_set_pin_pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
</UL>

<P><STRONG><a name="[2c0]"></a>nvds_setup</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gr_soc.o(i.nvds_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = nvds_setup &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_sector_size
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_get_info
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[14a]"></a>app_key_core_click_event_handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_key_core.o(i.app_key_core_click_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_key_core_click_event_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_key_polling_cplt
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_click_read
</UL>

<P><STRONG><a name="[14c]"></a>app_key_core_click_read</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, app_key_core.o(i.app_key_core_click_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_key_core_click_read &rArr; app_key_core_state_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_state_scan
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_click_event_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_polling_10ms
</UL>

<P><STRONG><a name="[14b]"></a>app_key_core_key_polling_cplt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key_core.o(i.app_key_core_key_polling_cplt))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_state_scan
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_click_event_handler
</UL>

<P><STRONG><a name="[14d]"></a>app_key_core_state_scan</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, app_key_core.o(i.app_key_core_state_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_key_core_state_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_key_polling_cplt
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_click_read
</UL>

<P><STRONG><a name="[84]"></a>app_gpiote_event_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_key.o(i.app_gpiote_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_gpiote_event_handler &rArr; app_key_timer_start &rArr; app_timer_start_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timer_start
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_key_wait_polling_record
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.app_key_init)
</UL>
<P><STRONG><a name="[85]"></a>app_key_core_evt_handler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_key.o(i.app_key_core_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_key_core_evt_handler &rArr; app_key_timer_stop &rArr; app_timer_delete &rArr; app_timer_stop_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timer_stop
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_is_all_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.app_key_init)
</UL>
<P><STRONG><a name="[153]"></a>app_key_press_state_polling</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_key.o(i.app_key_press_state_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_key_press_state_polling &rArr; app_io_read_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_read_pin
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_key_pressed_record
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_handler
</UL>

<P><STRONG><a name="[86]"></a>app_key_timeout_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_key.o(i.app_key_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_key_timeout_handler &rArr; app_key_core_polling_10ms &rArr; app_key_core_click_read &rArr; app_key_core_state_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_press_state_polling
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_core_polling_10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.app_key_timer_start)
</UL>
<P><STRONG><a name="[12b]"></a>app_key_timer_start</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_key.o(i.app_key_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_key_timer_start &rArr; app_timer_start_api &rArr; low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_event_handler
</UL>

<P><STRONG><a name="[15d]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_need_insert_front
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_mark
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_execute
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_remove
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_insert
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[15e]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_need_insert_front
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_mark
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_execute
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_remove
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_insert
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[168]"></a>app_timer_node_init</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, app_timer.o(i.app_timer_node_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_timer_node_init
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[160]"></a>app_timer_running_queue_insert</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_running_queue_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_running_queue_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_mark
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[161]"></a>app_timer_running_queue_remove</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_running_queue_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_running_queue_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_trigger_window_mark
</UL>

<P><STRONG><a name="[162]"></a>app_timer_running_queue_trigger_window_execute</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_running_queue_trigger_window_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_running_queue_trigger_window_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[163]"></a>app_timer_running_queue_trigger_window_mark</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_running_queue_trigger_window_mark))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_timer_running_queue_trigger_window_mark &rArr; app_timer_running_queue_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_remove
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_running_queue_insert
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[166]"></a>is_need_insert_front</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_timer.o(i.is_need_insert_front))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = is_need_insert_front
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[164]"></a>is_timer_node_created</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_timer.o(i.is_timer_node_created))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[165]"></a>low_level_timer_rest_get</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_timer.o(i.low_level_timer_rest_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = low_level_timer_rest_get &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_current_value
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[16a]"></a>low_level_timer_startup</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, app_timer.o(i.low_level_timer_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = low_level_timer_startup &rArr; hal_sleep_timer_get_clock_freq &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_status_get
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_get_clock_freq
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_config_and_start
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[167]"></a>low_level_timer_stop</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_timer.o(i.low_level_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = low_level_timer_stop &rArr; hal_sleep_timer_stop &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_stop
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep_timer_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_api
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[169]"></a>sleep_timer_handler_register</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_timer.o(i.sleep_timer_handler_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sleep_timer_handler_register
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soc_register_nvic
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start_api
</UL>

<P><STRONG><a name="[232]"></a>get_pin_index</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_io.o(i.get_pin_index))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_callback
</UL>

<P><STRONG><a name="[a8]"></a>uart_wake_up_ind</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>app_uart_start_transmit_async</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, app_uart.o(i.app_uart_start_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_it
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_cplt_callback
</UL>

<P><STRONG><a name="[246]"></a>uart_get_id</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_uart.o(i.uart_get_id))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_cplt_callback
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_rx_cplt_callback
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_error_callback
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_tx_cplt_callback
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_rx_cplt_callback
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_cplt_callback
</UL>

<P><STRONG><a name="[175]"></a>uart_gpio_config</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app_uart.o(i.uart_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[a7]"></a>uart_prepare_for_sleep</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_uart.o(i.uart_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_suspend_reg
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_log.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[15c]"></a>app_log_data_trans</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_log.o(i.app_log_data_trans))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[15a]"></a>app_log_is_fmt_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_log.o(i.app_log_is_fmt_set))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[15b]"></a>app_log_strcpy</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, app_log.o(i.app_log_strcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_log_strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[126]"></a>app_assert_info_output</STRONG> (Thumb, 114 bytes, Stack size 1048 bytes, app_assert.o(i.app_assert_info_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = app_assert_info_output &rArr; app_log_output &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[2b5]"></a>find_new_hci_cmd_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llm_hci_patch.o(i.find_new_hci_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_hci_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_hci_command_handler_patch
</UL>

<P><STRONG><a name="[251]"></a>llm_is_wl_accessible_patch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_is_wl_accessible_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llm_is_wl_accessible_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[296]"></a>llc_llcp_rsp_to</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_llcp_rsp_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_disconnect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_llcp_rsp_to_handler_patch
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_llcp_rsp_to_handler_patch
</UL>

<P><STRONG><a name="[277]"></a>get_id_by_conn_idx</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, l2cc_task_patch.o(i.get_id_by_conn_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_id_by_conn_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
</UL>

<P><STRONG><a name="[258]"></a>init_hci_le_cmd_cmp_evt_starting_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gapm_init_patch.o(i.init_hci_le_cmd_cmp_evt_starting_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stopped
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[1f6]"></a>find_new_gapm_hci_evt_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_task_patch.o(i.find_new_gapm_hci_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_gapm_hci_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_hci_handler_patch
</UL>

<P><STRONG><a name="[224]"></a>ll_aon_gpio_reset_output_pin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.ll_aon_gpio_reset_output_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_write_pin
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
</UL>

<P><STRONG><a name="[32c]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_disable_ext_wakeup
</UL>

<P><STRONG><a name="[1e6]"></a>hci_disc_cmp_evt_handler_patch</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gapc_hci_patch.o(i.hci_disc_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_disc_cmp_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_hci_handler_patch
</UL>

<P><STRONG><a name="[1e5]"></a>hci_le_ltk_request_evt_handler_patch</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.hci_le_ltk_request_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_hci_handler_patch
</UL>

<P><STRONG><a name="[2f6]"></a>ll_aon_wdt_get_counter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_aon_wdt_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
</UL>

<P><STRONG><a name="[32f]"></a>ll_calendar_clear_flag_alarm</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_clear_flag_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[32e]"></a>ll_calendar_get_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[32d]"></a>ll_calendar_set_clock_div</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_set_clock_div))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[1ce]"></a>find_ltk_again</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_sdk_sec_patch.o(i.find_ltk_again))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = find_ltk_again &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2f8]"></a>sec_bond_info_miss_check</STRONG> (Thumb, 70 bytes, Stack size 192 bytes, ble_sdk_sec_patch.o(i.sec_bond_info_miss_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[180]"></a>attm_update_max_len</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.attm_update_max_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attm_update_max_len
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[340]"></a>ll_pwr_get_ext_wakeup_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[33f]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[1c3]"></a>cpll_renew_vco_base</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, platform_sdk.o(i.cpll_renew_vco_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[310]"></a>get_ton_value_for_1p5uH</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, platform_sdk.o(i.get_ton_value_for_1p5uH))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[311]"></a>get_ton_value_for_2p2uH</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, platform_sdk.o(i.get_ton_value_for_2p2uH))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[341]"></a>ll_aon_gpio_is_enabled_it</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, platform_sdk.o(i.ll_aon_gpio_is_enabled_it))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[2ea]"></a>temperature_calibrations</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sdk.o(i.temperature_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = temperature_calibrations &rArr; ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retention_mem_set
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[2eb]"></a>vbatt_calibrations</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, platform_sdk.o(i.vbatt_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[2cb]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[2ca]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[2c7]"></a>platform_set_ble_rtc_clk</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, platform_clock.o(i.platform_set_ble_rtc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[2c8]"></a>platform_set_psc_clk</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, platform_clock.o(i.platform_set_psc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_set_psc_clk
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[2c6]"></a>rf_xo_offset_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, platform_clock.o(i.rf_xo_offset_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = rf_xo_offset_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[2c5]"></a>system_clk_mgmt_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, platform_clock.o(i.system_clk_mgmt_init))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[1d0]"></a>llc_rem_encrypt_proc_finish</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, llc_encrypt_patch.o(i.llc_rem_encrypt_proc_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_flow_set
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_unreg
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_pause_set
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_state_set
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_le_ping_restart
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_enc_evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
</UL>

<P><STRONG><a name="[28b]"></a>get_conn_idx_by_id</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, l2cm_patch.o(i.get_conn_idx_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_conn_idx_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[95]"></a>l2cm_l2cap_tx_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = l2cm_l2cap_tx_handler_patch &rArr; get_conn_idx_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
</UL>
<P><STRONG><a name="[291]"></a>ll_aon_gpio_set_pin_mode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>

<P><STRONG><a name="[292]"></a>ll_msio_set_pin_mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>

<P><STRONG><a name="[384]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[380]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[383]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[9e]"></a>pwr_mgmt_shutdown_patch</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pwr_mgmt_shutdown_patch &rArr; hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_wakeup_flag (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_enter_chip_deepsleep (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set (via Veneer)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on (via Veneer)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_off (via Veneer)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
</UL>
<P><STRONG><a name="[17c]"></a>append_item</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.append_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[17e]"></a>compact_nvds</STRONG> (Thumb, 500 bytes, Stack size 64 bytes, sdk_nvds_patch.o(i.compact_nvds))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[1ba]"></a>cp_hdr_incr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.cp_hdr_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cp_hdr_incr
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[1b9]"></a>dec_flash_read</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[1c7]"></a>dec_flash_write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[1cc]"></a>find_item</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.find_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = find_item &rArr; tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[316]"></a>gen_hdr_checksum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.gen_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[317]"></a>gen_value_checksum</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, sdk_nvds_patch.o(i.gen_value_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gen_value_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[283]"></a>is_item_same</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.is_item_same))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = is_item_same &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[1bb]"></a>read_incr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.read_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_incr &rArr; dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[2bf]"></a>replace_item</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, sdk_nvds_patch.o(i.replace_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[1b8]"></a>tags_cache_clean</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tags_cache_clean &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[315]"></a>tags_cache_rec_add</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_rec_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[2f2]"></a>tags_cache_rec_del</STRONG> (Thumb, 302 bytes, Stack size 328 bytes, sdk_nvds_patch.o(i.tags_cache_rec_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = tags_cache_rec_del &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[1cd]"></a>tags_cache_rec_find</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.tags_cache_rec_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
</UL>

<P><STRONG><a name="[2be]"></a>verify_hdr_checksum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.verify_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[1bc]"></a>write_compacted_items</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.write_compacted_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[314]"></a>write_incr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.write_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[17f]"></a>write_item</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, sdk_nvds_patch.o(i.write_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = write_item &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_value_checksum
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_hdr_checksum
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[194]"></a>sdk_gatt_check_conidx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_sdk_gattc_patch.o(i.sdk_gatt_check_conidx))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[214]"></a>gatt_remove_item_patch</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_sdk_gatts_patch.o(i.gatt_remove_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[191]"></a>ble_event_handle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_event_patch.o(i.ble_event_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_ltk_req_cb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cb
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_disc_cb
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_srvc_browse_cb
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_ntf_ind_cb
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_inc_srvc_disc_cb
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_char_disc_cb
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_char_desc_disc_cb
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_prf_register_cb
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_keypress_notify_cb
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_key_missing_cb
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_enc_req_cb
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_enc_ind_cb
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_sdu_send_cb
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_sdu_recv_cb
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_disconn_cb
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_credit_add_cmp_cb
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_conn_req_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_conn_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cap_lecb_add_credits_ind_cb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_exchange_cb
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sync_lost_cb
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sync_establish_cb
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_sync_cb
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_stop_cb
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_start_cb
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_scan_req_ind_cb
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_rslv_addr_read_cb
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_psm_manager_cb
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_phy_update_cb
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_peer_name_ind_cb
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_peer_info_get_cb
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_param_set_cb
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_le_pkt_size_info_cb
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_cb
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_info_get_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_update_req_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_update_cb
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_info_get_cb
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connect_cb
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connect_cancel_cb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_auto_connection_timeout_cb
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_stop_cb
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_cb
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_report_ind_cb
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_update_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cplt_callback
</UL>

<P><STRONG><a name="[75]"></a>ble_init_cplt_callback</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, ble_event_patch.o(i.ble_init_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = ble_init_cplt_callback &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>gap_adv_data_update_cb</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_adv_data_update_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_adv_data_update_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>gap_adv_report_ind_cb</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_adv_report_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_adv_report_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>gap_adv_start_cb</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_adv_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_adv_start_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>gap_adv_stop_cb</STRONG> (Thumb, 52 bytes, Stack size 64 bytes, ble_event_patch.o(i.gap_adv_stop_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = gap_adv_stop_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>gap_auto_connection_timeout_cb</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_auto_connection_timeout_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_auto_connection_timeout_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>gap_connect_cancel_cb</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_connect_cancel_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_connect_cancel_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>gap_connect_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_connect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_connect_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>gap_connection_info_get_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_connection_info_get_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_connection_info_get_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>gap_connection_update_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_connection_update_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_connection_update_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>gap_connection_update_req_cb</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_connection_update_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_connection_update_req_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>gap_dev_info_get_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_dev_info_get_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_dev_info_get_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>gap_disconnect_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_disconnect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_disconnect_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>gap_le_pkt_size_info_cb</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_le_pkt_size_info_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_le_pkt_size_info_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>gap_param_set_cb</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_param_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_param_set_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>gap_peer_info_get_cb</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_peer_info_get_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_peer_info_get_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>gap_peer_name_ind_cb</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_peer_name_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_peer_name_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>gap_phy_update_cb</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_phy_update_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_phy_update_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>gap_psm_manager_cb</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_psm_manager_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_psm_manager_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>gap_rslv_addr_read_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_rslv_addr_read_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_rslv_addr_read_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>gap_scan_req_ind_cb</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_scan_req_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_scan_req_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>gap_scan_start_cb</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_scan_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_scan_start_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>gap_scan_stop_cb</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_scan_stop_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_scan_stop_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>gap_stop_sync_cb</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_stop_sync_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_stop_sync_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>gap_sync_establish_cb</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, ble_event_patch.o(i.gap_sync_establish_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gap_sync_establish_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>gap_sync_lost_cb</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, ble_event_patch.o(i.gap_sync_lost_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = gap_sync_lost_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>gatt_mtu_exchange_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.gatt_mtu_exchange_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = gatt_mtu_exchange_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>l2cap_lecb_add_credits_ind_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_add_credits_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_add_credits_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>l2cap_lecb_conn_cb</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_conn_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_conn_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>l2cap_lecb_conn_req_cb</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_conn_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_conn_req_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>l2cap_lecb_credit_add_cmp_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_credit_add_cmp_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_credit_add_cmp_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>l2cap_lecb_disconn_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_disconn_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_disconn_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>l2cap_lecb_sdu_recv_cb</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_sdu_recv_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_sdu_recv_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>l2cap_lecb_sdu_send_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.l2cap_lecb_sdu_send_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = l2cap_lecb_sdu_send_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>sec_rcv_enc_ind_cb</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, ble_event_patch.o(i.sec_rcv_enc_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sec_rcv_enc_ind_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>sec_rcv_enc_req_cb</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, ble_event_patch.o(i.sec_rcv_enc_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sec_rcv_enc_req_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>sec_rcv_key_missing_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.sec_rcv_key_missing_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sec_rcv_key_missing_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>sec_rcv_keypress_notify_cb</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, ble_event_patch.o(i.sec_rcv_keypress_notify_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sec_rcv_keypress_notify_cb &rArr; ble_event_handle &rArr; ble_profile_evt_handle &rArr; gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_handle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_event_patch.o(.data)
</UL>
<P><STRONG><a name="[1d3]"></a>get_ori_cmd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, platform_patch.o(i.get_ori_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[1d4]"></a>get_svc_cmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_patch.o(i.get_svc_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[11e]"></a>ll_adc_disable_clock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_adc.o(i.ll_adc_disable_clock))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
</UL>

<P><STRONG><a name="[372]"></a>xqspi_receive_patch</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
</UL>

<P><STRONG><a name="[373]"></a>ll_xqspi_set_qspi_datasize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[377]"></a>xqspi_receive_align_word</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
</UL>

<P><STRONG><a name="[8d]"></a>get_info</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dfu_cmd_handler_patch.o(i.get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_send_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
</UL>
<P><STRONG><a name="[217]"></a>ble_service_evt_handler_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_profile_patch.o(i.ble_service_evt_handler_get))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_evt_handle
</UL>

<P><STRONG><a name="[198]"></a>gatt_common_evt_handler</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_profile_patch.o(i.gatt_common_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_common_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[19a]"></a>gattc_connect_state_evt</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_profile_patch.o(i.gattc_connect_state_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_connect_state_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[19d]"></a>gattc_evt_handle</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_profile_patch.o(i.gattc_evt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_evt_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[19c]"></a>gattc_srvc_browse_evt_handle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_profile_patch.o(i.gattc_srvc_browse_evt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_srvc_browse_evt_handle &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_get_record_profile_id
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[199]"></a>gatts_connect_state_evt</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_profile_patch.o(i.gatts_connect_state_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatts_connect_state_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[19b]"></a>gatts_evt_handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_profile_patch.o(i.gatts_evt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatts_evt_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_service_evt_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_profile_evt_handle
</UL>

<P><STRONG><a name="[378]"></a>ll_xqspi_disable_cache</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>

<P><STRONG><a name="[322]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[31a]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[7e]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
